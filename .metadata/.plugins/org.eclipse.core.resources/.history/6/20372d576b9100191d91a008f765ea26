import java.io.IOException;
import java.util.Arrays;
import java.util.Collections;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class ClassificaServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public ClassificaServlet() {
		super();
	}

	public void init(ServletConfig config) throws ServletException {
		super.init(config);
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.getSession().invalidate();
		request.setAttribute("mensagem", " ");
		response.sendRedirect("classifica.jsp");
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("Lista: " + request.getParameter("lista"));
		System.out.println("Descendente: " + request.getParameter("descendente"));

		String mensagem = "";
		String lista = request.getParameter("lista");

		if (!lista.equals("")) {
			String[] arrayLista = lista.split("\\s+");
			for(String n : arrayLista) {
				try {
					Integer.parseInt(n);
				} catch (NumberFormatException numberFormatException) {
					mensagem = "A lista deve conter apenas números inteiros.";
					break;
				} catch (Exception exception) {
					mensagem = "Lista inválida.";
					break;
				}
			}

			Integer[] arrayOrdenado = strArrayToIntArray(arrayLista);
			//mensagem = ordenarArrayAsc(arrayOrdenado);
			mensagem = ordenarArrayDesc(arrayOrdenado);
		} else {
			mensagem = "A lista não pode estar vazia.";
		}

		request.setAttribute("mensagem", mensagem);
		request.getRequestDispatcher("classifica.jsp").forward(request, response);
	}

	public static Integer[] strArrayToIntArray(String[] array){
		Integer[] aux = new Integer[array.length];
		for (int i = 0; i < array.length; i++) {
			aux[i] = Integer.parseInt(array[i]);
		}

		return aux;
	}

	private static String ordenarArrayAsc(Integer[] vet) {
		String arrayOrdenado = "";

		Arrays.sort(vet);
		for(int v : vet)
			arrayOrdenado += v + " ";

		return arrayOrdenado;
	}

	private static String ordenarArrayDesc(Integer[] vet) {
		Arrays.sort(vet, Collections.reverseOrder());
		String arrayOrdenado = "";

		Arrays.sort(vet);
		for(int v : vet)
			arrayOrdenado += v + " ";

		return arrayOrdenado;
	}
}